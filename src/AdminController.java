/**
 * Portions of the code were generated by the Github Copilot AI
 */

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.input.KeyEvent;
import javafx.stage.Stage;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

public class AdminController implements Initializable {

    @FXML
    private TextField wordLength;
    @FXML
    private TableView<WordFile> fileTable;
    private ObservableList<WordFile> fileData;

    /**
     * @param url
     * @param resourceBundle
     */
    @Override
    public void initialize(URL url, ResourceBundle resourceBundle) {
        wordLength.addEventFilter(KeyEvent.KEY_TYPED, keyEvent -> {
            if (!"0123456789".contains(keyEvent.getCharacter())) {
                keyEvent.consume();
            }
        });
        wordLength.setOnAction(actionEvent -> setWordLength());

        fileData = FXCollections.observableArrayList();
        fileTable.setItems(fileData);

        TableColumn<WordFile, ?> fileColumn = fileTable.getColumns().get(0);
        TableColumn<WordFile, ?> actionColumn = fileTable.getColumns().get(1);

        actionColumn.setCellFactory(param -> new TableCellWithButton<>());

        fileColumn.setCellValueFactory(param -> param.getFile());
        actionColumn.setCellValueFactory(param -> param.getActionButton());
    }

    public void setWordLength() {
        String length = wordLength.getText();
        if (length.length() > 0) {
            WordBank.setWordLength(Integer.parseInt(length));
        }
    }

    public void addNewWordFile() {

    }

    public static void loadAdminDashboard(Stage stage) throws IOException {
        FXMLLoader loader = new FXMLLoader(AdminController.class.getResource("admin-dashboard.fxml"));
        Parent root = loader.load();
        Scene scene = new Scene(root);
        stage.setScene(scene);
    }

    public static class TableCellWithButton<String, S> extends TableCell<String, S> {
        private final Button button;

        public TableCellWithButton() {
            button = new Button("Click Me");
            button.setOnAction(event -> {
                String rowData = getTableRow().getItem();
                System.out.println("Button clicked for: " + rowData);
            });
        }

        @Override
        protected void updateItem(S item, boolean empty) {
            super.updateItem(item, empty);
            if (empty || item == null) {
                setGraphic(null);
            } else {
                setGraphic(button);
            }
        }
    }
}
